// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// AccessToken is an autogenerated mock type for the AccessToken type
type AccessToken struct {
	mock.Mock
}

type AccessToken_Expecter struct {
	mock *mock.Mock
}

func (_m *AccessToken) EXPECT() *AccessToken_Expecter {
	return &AccessToken_Expecter{mock: &_m.Mock}
}

// AccessToken provides a mock function with given fields:
func (_m *AccessToken) AccessToken() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// AccessToken_AccessToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AccessToken'
type AccessToken_AccessToken_Call struct {
	*mock.Call
}

// AccessToken is a helper method to define mock.On call
func (_e *AccessToken_Expecter) AccessToken() *AccessToken_AccessToken_Call {
	return &AccessToken_AccessToken_Call{Call: _e.mock.On("AccessToken")}
}

func (_c *AccessToken_AccessToken_Call) Run(run func()) *AccessToken_AccessToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *AccessToken_AccessToken_Call) Return(_a0 string) *AccessToken_AccessToken_Call {
	_c.Call.Return(_a0)
	return _c
}

type NewAccessTokenT interface {
	mock.TestingT
	Cleanup(func())
}

// NewAccessToken creates a new instance of AccessToken. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAccessToken(t NewAccessTokenT) *AccessToken {
	mock := &AccessToken{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
