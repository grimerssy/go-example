// Code generated by MockGen. DO NOT EDIT.
// Source: greeter.go

// Package biz is a generated GoMock package.
package biz

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	core "github.com/grimerssy/go-example/internal/core"
)

// greeterUserRepositoryMock is a mock of GreeterUserRepository interface.
type greeterUserRepositoryMock struct {
	ctrl     *gomock.Controller
	recorder *greeterUserRepositoryMockMockRecorder
}

// greeterUserRepositoryMockMockRecorder is the mock recorder for greeterUserRepositoryMock.
type greeterUserRepositoryMockMockRecorder struct {
	mock *greeterUserRepositoryMock
}

// NewgreeterUserRepositoryMock creates a new mock instance.
func NewgreeterUserRepositoryMock(ctrl *gomock.Controller) *greeterUserRepositoryMock {
	mock := &greeterUserRepositoryMock{ctrl: ctrl}
	mock.recorder = &greeterUserRepositoryMockMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *greeterUserRepositoryMock) EXPECT() *greeterUserRepositoryMockMockRecorder {
	return m.recorder
}

// GetUserById mocks base method.
func (m *greeterUserRepositoryMock) GetUserById(ctx context.Context, id int64) (*core.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserById", ctx, id)
	ret0, _ := ret[0].(*core.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserById indicates an expected call of GetUserById.
func (mr *greeterUserRepositoryMockMockRecorder) GetUserById(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserById", reflect.TypeOf((*greeterUserRepositoryMock)(nil).GetUserById), ctx, id)
}

// UpdateUserCount mocks base method.
func (m *greeterUserRepositoryMock) UpdateUserCount(ctx context.Context, user *core.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateUserCount", ctx, user)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateUserCount indicates an expected call of UpdateUserCount.
func (mr *greeterUserRepositoryMockMockRecorder) UpdateUserCount(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateUserCount", reflect.TypeOf((*greeterUserRepositoryMock)(nil).UpdateUserCount), ctx, user)
}
