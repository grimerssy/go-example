// Code generated by MockGen. DO NOT EDIT.
// Source: validator.go

// Package validation is a generated GoMock package.
package validation

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// validatorMock is a mock of Validator interface.
type validatorMock struct {
	ctrl     *gomock.Controller
	recorder *validatorMockMockRecorder
}

// validatorMockMockRecorder is the mock recorder for validatorMock.
type validatorMockMockRecorder struct {
	mock *validatorMock
}

// NewvalidatorMock creates a new mock instance.
func NewvalidatorMock(ctrl *gomock.Controller) *validatorMock {
	mock := &validatorMock{ctrl: ctrl}
	mock.recorder = &validatorMockMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *validatorMock) EXPECT() *validatorMockMockRecorder {
	return m.recorder
}

// Validate mocks base method.
func (m *validatorMock) Validate() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate")
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate.
func (mr *validatorMockMockRecorder) Validate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*validatorMock)(nil).Validate))
}
